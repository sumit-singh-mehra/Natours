- y axis : below -> +ve   ,  above -> -ve
- x axis : right -> +ve   ,  left  -> -ve

- To create a transition effect, you must specify two things:
  ---
    - The CSS property you want to add an effect to
    - The duration of the effect

- "Properties related to text are inherited" .

- calc(100% - #{$gutter-horizontal})
  For using variables ; need to write as : #{$variable_name}

******************************************
              HEADER
******************************************

background-position : top ; //top remains the same , rest of the image crops out accordingly when window resized.

1. Used clip-path property - allows to clip an element to basic shape
   clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
                      TL , TR ,BR , BL
   Reference is : TopLeft point

2. For centering :
   .text-box {
    position: absolute;
    top: 40%;
    left: 50%; // 50% of the parent
    transform: translate(-50%, -50%); //related to element 
    
  }

3. Using backface-visibility : hidden; //shaking in 3D animation
----
   An element's back face is a mirror image of its front face. Though invisible in 2D, the back face can become visible when a transformation causes the element to be rotated in 3D space.

4. For headings :
----
   - Using @keyframes and animation property.

5. For button :
----
   - Clicking effect
     - using transform property in conjecture with transition 
     - Adding in :hover state translateY(-3px) 
              in :active state translateY(-1px)

   - For shadow effect
     - Use .btn::after to create replica of the button and position it behind the actual button 
     - opacity : 0 when ::after scaled to give a visual affect

   - For animation
     - animation-fill-mode : backwards 
       since animation is delayed so we see that button is in its usual place and after 0.75s animation starts but we want button to be not 
       visual so we use it. That is button retains the style set by first keyframe.

+++++++++++++++++++++++++++++++++++++++++++++

******************************************
              About Section
******************************************

1. To get the shape :
   margin-top : -20vh; (95vh-75vh)

2. Heading effect :
   i) Color :
     --
      display: inline-block;
      background-image: linear-gradient(
        to right,
        $color-primary-light,
        $color-primary-dark
      );
      background-clip: text; 
      //  how far the background (color or image) should extend within an element.
      // Background is clipped to the foreground text(places where the text is)

      color: transparent;

    ii) Skewing effect :
       --
       transform: skewY(2deg) skewX(15deg) scale(1.1);

3. Image hover effect :
   - For positioning , use position:absolute;
   - For outline effect : 
     - outline-offset : 2rem  // in parent class

+++++++++++++++++++++++++++++++++++++++++++++

******************************************
            Features Section
******************************************

1. Skewing :
   - .section-features{
      transform :skewY(-7deg);
   }

   - .row{                      --->  $ > *{}
    transform : skewY(7deg);
   }

   - margin-top: -10rem; // for moving upwards .

+++++++++++++++++++++++++++++++++++++++++++++

******************************************
            Tours Section
******************************************

1. margin-top:-10rem;

2. Rotate card 180deg
   - transform : rotateY(180deg)

3. The perspective property defines how far the object is away from the user. So, a lower value will result in a more intensive 3D effect than a higher value.
    .card {
    perspective: 150rem;
    -moz-perspective: 150rem;
    position: relative;
    height: 52rem;         --> MUST
    
    &__side {
        height: 52rem;
        transition: all .8s ease;
    }

4. Position : absolute for positioning card behind each other and backface-visibility:hidden

5. Front card styling :
   ---
   - background-blend-mode : screen;

6. Styling text in the image :
  ---
  specifies how an element's fragments should be rendered when broken across multiple lines, columns, or pages.

  - box-decoration-break : clone;

+++++++++++++++++++++++++++++++++++++++++++++

******************************************
            Stories Section
******************************************

1. To have element flow around the circle .
   &__shape{
    width : 15rem;
    height : 15rem;
    float : left;
    shape-outside : circle(50% at 50% 50%);  // radius is 50% of width 
    clip-path : circle(50% at 50% 50%)
   }

   - shape-outside : Defines a shape around which inline content should wrap.

2. To zoom out effect :
   - filter : blur(3px) brightness(80%);

+++++++++++++++++++++++++++++++++++++++++++++

******************************************
            Booking Section
******************************************

1. For form effect :
---
    background-image: linear-gradient(
          105deg,
          rgba($color-white, 0.9) 0%,
          rgba($color-white, 0.9) 50%,
          transparent 50%
        ),
        url(../img/nat-10.jpg);

+++++++++++++++++++++++++++++++++++++++++++++

******************************************
            POP-UP Section
******************************************

1. hyphens : auto;     --> <html lang="en"> </html> --> imp

2. column-count : 2;
   column-gap : 4rem;
   column-rule : 1px solid red;

3. To use popup functionality :
   - Use id and 'a' tag .

+++++++++++++++++++++++++++++++++++++++++++++

******************************************
            Responsive design
******************************************

@mixin respond($breakpoint){
  @if $breakpoint == phone {
    @media only screen and (max-width : 37.5em){
      @content;
    }
  }
}

@content - generally used for code replacement